name: Build and Release

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2
        with:
          nuget-version: 'latest'

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      # Create packages.config files to ensure NuGet knows what to restore
      - name: Create packages.config files
        run: |
          # Create packages.config for TinyOPDS
          @'
          <?xml version="1.0" encoding="utf-8"?>
          <packages>
            <package id="System.Data.SQLite.Core.FTS5" version="1.0.114.1" targetFramework="net48" />
          </packages>
          '@ | Out-File -FilePath "TinyOPDS\packages.config" -Encoding UTF8
          
          # Create packages.config for TinyOPDSCLI
          @'
          <?xml version="1.0" encoding="utf-8"?>
          <packages>
            <package id="System.Data.SQLite.Core.FTS5" version="1.0.114.1" targetFramework="net48" />
          </packages>
          '@ | Out-File -FilePath "TinyOPDSCLI\packages.config" -Encoding UTF8

      # Restore NuGet packages to packages folder (old style)
      - name: Restore NuGet packages
        run: |
          nuget restore TinyOPDS.sln -PackagesDirectory packages

      # Debug: Check if packages were restored correctly
      - name: Check packages structure
        run: |
          Write-Host "=== Checking if packages folder exists ==="
          if (Test-Path "packages") {
            Write-Host "packages folder exists"
            Get-ChildItem -Path "packages" -Recurse | Select-Object FullName
          } else {
            Write-Host "packages folder does NOT exist!"
          }
          
          Write-Host "`n=== Checking specific targets file ==="
          $targetFile = "packages\System.Data.SQLite.Core.FTS5.1.0.114.1\build\net45\System.Data.SQLite.Core.FTS5.targets"
          if (Test-Path $targetFile) {
            Write-Host "Target file EXISTS: $targetFile"
          } else {
            Write-Host "Target file MISSING: $targetFile"
            
            # Check what actually exists in the SQLite package
            Write-Host "`n=== Contents of SQLite package (if exists) ==="
            $sqlitePath = "packages\System.Data.SQLite.Core.FTS5.1.0.114.1"
            if (Test-Path $sqlitePath) {
              Get-ChildItem -Path $sqlitePath -Recurse | Select-Object FullName
            }
          }

      - name: Build solution
        run: msbuild TinyOPDS.sln /p:Configuration=Release /p:Platform="Any CPU" /m

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            TinyOPDS/bin/Release/TinyOPDS.exe
            TinyOPDSCLI/bin/Release/TinyOPDSCLI.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
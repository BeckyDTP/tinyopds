name: CI-Diagnostic

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Show environment
        run: |
          echo "Current directory: %CD%"
          echo "Files in root:"
          dir /B
          echo.
          echo "TinyOPDS folder:"
          dir TinyOPDS /B
          echo.
          echo "TinyOPDSCLI folder:"
          dir TinyOPDSCLI /B

      - uses: microsoft/setup-msbuild@v2
      - uses: NuGet/setup-nuget@v2

      - name: NuGet Restore with diagnostics
        run: |
          nuget restore TinyOPDS.sln -Verbosity detailed
          echo.
          echo "Packages folder after restore:"
          if exist packages (
            dir packages /B
          ) else (
            echo "No packages folder found!"
          )

      - name: Fix package paths and show structure
        shell: pwsh
        run: |
          Write-Host "=== Package Structure BEFORE ===" -ForegroundColor Yellow
          
          if (Test-Path "packages") {
            Write-Host "Root packages:" -ForegroundColor Cyan
            Get-ChildItem "packages" -Directory | Select-Object -First 5 | ForEach-Object {
              Write-Host "  - $($_.Name)"
            }
          }
          
          if (Test-Path "TinyOPDS\packages") {
            Write-Host "TinyOPDS\packages:" -ForegroundColor Cyan
            Get-ChildItem "TinyOPDS\packages" -Directory | Select-Object -First 5 | ForEach-Object {
              Write-Host "  - $($_.Name)"
            }
          } else {
            Write-Host "TinyOPDS\packages: NOT FOUND" -ForegroundColor Red
          }
          
          # Copy packages
          if (Test-Path "packages") {
            Write-Host "`nCopying packages to TinyOPDS\packages..." -ForegroundColor Green
            if (!(Test-Path "TinyOPDS\packages")) {
              New-Item -ItemType Directory -Path "TinyOPDS\packages" -Force | Out-Null
            }
            Copy-Item -Path "packages\*" -Destination "TinyOPDS\packages\" -Recurse -Force
          }
          
          Write-Host "`n=== Package Structure AFTER ===" -ForegroundColor Yellow
          
          if (Test-Path "TinyOPDS\packages") {
            Write-Host "TinyOPDS\packages:" -ForegroundColor Cyan
            Get-ChildItem "TinyOPDS\packages" -Directory | Select-Object -First 5 | ForEach-Object {
              Write-Host "  - $($_.Name)"
            }
          }
          
          # Check critical DLLs
          Write-Host "`n=== Checking Critical DLLs ===" -ForegroundColor Yellow
          
          $dlls = @(
            "packages\SgmlReader.1.8.11\lib\4.0\SgmlReaderDll.dll",
            "packages\System.Data.SQLite.Core.FTS5.1.0.114.1\lib\net45\System.Data.SQLite.dll",
            "packages\EpubSharp.dll.1.1.5\lib\net451\EpubSharp.dll",
            "TinyOPDS\packages\SgmlReader.1.8.11\lib\4.0\SgmlReaderDll.dll",
            "TinyOPDS\packages\System.Data.SQLite.Core.FTS5.1.0.114.1\lib\net45\System.Data.SQLite.dll",
            "TinyOPDS\packages\EpubSharp.dll.1.1.5\lib\net451\EpubSharp.dll"
          )
          
          foreach ($dll in $dlls) {
            if (Test-Path $dll) {
              Write-Host "✓ $dll" -ForegroundColor Green
            } else {
              Write-Host "✗ $dll" -ForegroundColor Red
            }
          }

      - name: Build with detailed logging
        run: |
          msbuild TinyOPDS.sln /p:Configuration=Release /v:normal /fl /flp:logfile=build.log
          echo.
          echo "Build completed. Checking outputs..."
          if exist TinyOPDS\bin\Release\TinyOPDS.exe (
            echo "SUCCESS: TinyOPDS.exe found"
            dir TinyOPDS\bin\Release\*.exe
          ) else (
            echo "ERROR: TinyOPDS.exe not found"
          )
          if exist TinyOPDSCLI\bin\Release\TinyOPDSCLI.exe (
            echo "SUCCESS: TinyOPDSCLI.exe found"
            dir TinyOPDSCLI\bin\Release\*.exe
          ) else (
            echo "ERROR: TinyOPDSCLI.exe not found"
          )

      - name: Upload build log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-log
          path: build.log

      - name: Upload everything
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: all-outputs
          path: |
            TinyOPDS\bin\
            TinyOPDSCLI\bin\